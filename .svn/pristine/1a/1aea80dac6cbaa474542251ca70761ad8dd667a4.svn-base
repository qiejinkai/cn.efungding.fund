package cn.efunding.fund.fragment;

import android.content.Intent;
import android.graphics.drawable.Drawable;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.Fragment;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;

import com.nostra13.universalimageloader.core.ImageLoader;

import java.net.URL;

import cn.efunding.fund.R;
import cn.efunding.fund.activity.MainActivity;
import cn.efunding.fund.activity.MeActivity;
import cn.efunding.fund.activity.UserActivity;
import cn.efunding.fund.appliacation.MyApplication;
import cn.efunding.fund.common.JSON;
import cn.efunding.fund.common.TimeCount;
import cn.efunding.fund.common.Value;
import cn.efunding.fund.url.CURL;
import cn.efunding.fund.url.IPost;

/**
 * Created by qiejinkai on 16/4/26.
 */
public class RegisterSecondFragment extends Fragment {

    private String bar_title = "注册新用户";

    private final static int MSG_ERROR = 1;

    private final static int MSG_JOIN = 2;

    private final static int MSG_RESMS = 3;

    private TimeCount time;

    private String resmsUrl ;

    private String joinUrl ;

    private String phone;

    private String password;

    private EditText passwordEt;

    private EditText codeEt;

    private String smsCode;

    private String referee;

    private EditText refereeEt;

    private CheckBox checkbox;

    private boolean agree;


    private String DID;

    public RegisterSecondFragment() {

    }

    private Handler myHandler = new Handler(){
        @Override
        public void handleMessage(Message msg) {

            switch (msg.what){
                case MSG_ERROR:
                    String error = msg.obj.toString();
                    getUserActivity().alertMsg(error);

                    break;
                case MSG_JOIN:
                    Object obj = msg.obj;

                    if(obj!=null){
                        String token = Value.stringValueForKey(obj,"token",null);
                        MyApplication context = (MyApplication)getActivity().getApplicationContext();
                        context.setToken(token);
                        context.setIsLogin(true);
                        context.setUserInfo(Value.stringValueForKey(obj, "user", null));
                        context.setWalletInfo(Value.stringValueForKey(obj, "wallet", null));

                        getActivity().startActivity(new Intent(MeActivity.ACTION));
                        getActivity().finish();
                    }

                    break;
                case MSG_RESMS:
                    time.start();
                    break;
            }
        }
    };


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

        View rootView = inflater.inflate(R.layout.register_second_fragment,container,false);


        initBar(rootView);
        initPage(rootView);
        return rootView;
    }

    private void initPage(View rootView){

        DID = ((MyApplication)getActivity().getApplicationContext()).getDid();

        Button timer = (Button) rootView.findViewById(R.id.timer);
        timer.setTextColor(getResources().getColor(R.color.fund_white));
        time = new TimeCount(60000, 1000);
        time.setChecking(timer);
        time.setName("重新发送");
        time.start();
        timer.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                new AsyncTask<Void, Void, Void>() {
                    private String error;

                    @Override
                    protected Void doInBackground(Void... params) {
                        resmsUrl = getString(R.string.domain) + getString(R.string.base_url_join_resmscode);
                        try {
                            IPost post = CURL.post(new URL(resmsUrl));
                            post.addValue("did", DID);
                            post.addValue("phone", getUserActivity().getPhone());
                            Object ob = JSON.decodeString(post.exec());
                            error = Value.stringValueForKey(ob, "error", null);
                            return null;

                        } catch (Throwable throwable) {
                            throwable.printStackTrace();
                            error = throwable.getMessage();
                        }
                        return null;
                    }

                    @Override
                    protected void onPostExecute(Void aVoid) {
                        if (error != null) {

                            Message msg = new Message();
                            msg.what = MSG_ERROR;
                            msg.obj = error;
                            myHandler.sendMessage(msg);

                        } else {
                            Message msg = new Message();
                            msg.what = MSG_RESMS;
                            myHandler.sendMessage(msg);

                        }
                    }
                }.execute();
            }
        });

        Button modify = (Button) rootView.findViewById(R.id.modify);
        modify.setTextColor(getResources().getColor(R.color.fund_white));

        modify.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getFragmentManager().popBackStack();
            }
        });

        TextView phoneNum = (TextView) rootView.findViewById(R.id.phoneNum);
        phoneNum.setTextColor(getResources().getColor(R.color.fund_white));
        phoneNum.setText(getUserActivity().getPhone());

        refereeEt = (EditText) rootView.findViewById(R.id.referee);
        codeEt = (EditText) rootView.findViewById(R.id.verifyCode);
        passwordEt = (EditText) rootView.findViewById(R.id.password);
        checkbox = (CheckBox) rootView.findViewById(R.id.agree);

        Button register = (Button) rootView.findViewById(R.id.register);
        register.setTextColor(getResources().getColor(R.color.fund_white));
        register.setText("注 册");

        register.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                referee = refereeEt.getText().toString();
                smsCode = codeEt.getText().toString();
                password = passwordEt.getText().toString();
                agree = checkbox.isChecked();

                new AsyncTask<Void, Void, Void>() {
                    private String error;
                    private Object result;
                    @Override
                    protected Void doInBackground(Void... params) {
                        joinUrl = getString(R.string.domain)+getString(R.string.base_url_join_join);

                        if(Value.isEmpty(password)){
                            error = "请输入密码";
                            return null;
                        }
                        if(Value.isEmpty(smsCode)){
                            error = "请输入验证码";
                            return null;
                        }
                        if(!agree){
                            error = "请勾选同意条款";
                            return null;

                        }
                        try {
                            IPost post = CURL.post(new URL(joinUrl));
                            post.addValue("did", DID);
                            post.addValue("phone", getUserActivity().getPhone());
                            post.addValue("code",smsCode);
                            post.addValue("password",password);
                            post.addValue("referee",referee);
                            Object ob = JSON.decodeString(post.exec());
                            error = Value.stringValueForKey(ob, "error", null);
                            result = ob;
                            return null;

                        } catch (Throwable throwable) {
                            throwable.printStackTrace();
                            error = throwable.getMessage();
                        }
                        return null;
                    }

                    @Override
                    protected void onPostExecute(Void aVoid) {
                        if(error != null ){

                            Message msg = new Message();
                            msg.what = MSG_ERROR ;
                            msg.obj = error;
                            myHandler.sendMessage(msg);

                        }else{
                            Message msg = new Message();
                            msg.what = MSG_JOIN ;
                            msg.obj = result;
                            myHandler.sendMessage(msg);

                        }
                    }
                }.execute();
            }
        });



    }
    private void initBar(final View rootView){
        Toolbar toolbar = (Toolbar) rootView.findViewById(R.id.toolbar);
        toolbar.setTitle("");
        TextView tv = (TextView) rootView.findViewById(R.id.bar_title);
        tv.setText(bar_title);
        tv.setTextColor(getResources().getColor(R.color.fund_white));
        Button btn = (Button) rootView.findViewById(R.id.btn_back_main);
        btn.setTextColor(getResources().getColor(R.color.fund_white));

        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                getFragmentManager().popBackStack();
            }
        });
        ((AppCompatActivity)getActivity()).setSupportActionBar(toolbar);
    }
    private UserActivity getUserActivity(){
        return (UserActivity)getActivity();
    }
}
